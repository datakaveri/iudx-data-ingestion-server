
openapi: 3.0.2


schemes:
  - "http"
  - "https"

produces:
  - "application/json"
  - "text/plain"

consumes:
  - "application/json"
  - "text/plain"


info:
  title: IUDX Data Ingestion Server APIs
  version: 4.0.0
  description: >
    # Introduction

    The <b>Data Ingestion Server</b> is the <b> IUDX's "Firewall"</b> which allows publication of
    data.
    It enables *Providers* and *Delegate* of datasources to publish data as
    per the IUDX data descriptor.

    For publication, it allows users to use <b>HTTP protocol over TLS (HTTPs)</b>.

    # API HTTP Responses

    Apart from the response codes specified in each API, the API server may
    respond with certain 4xx and 5xx error codes which are related to common API
    Gateway behaviours.

    The application should address them accordingly.
    
    # Tokens
    
    All the <b>*APIs*</b>  calls to the data ingestion server should contain a valid IUDX auth token presented in the header.
    
  contact:
    name: For support contact IUDX Team at
    email: support@iudx.org.in

tags:
- name: Data Ingestion
  x-displayName: "Data Ingestion Stream"
  description: |
    Register or delete data ingestion streams using HTTPs APIs. Once registered, the user can publish data through publish(`/entities`) API as per the IUDX data descriptor.
    These apis are intended to be used by IUDX *Administrator*.
    
- name: Publish Resource Data 
  x-displayName: "Publish Resource Data"
  description: |
    Publish Resource data to the created ingestion stream. A provider can use these API to publish resource data periodically over time or as according the resource. User is strictly required to follow the mandatory attribute and values defined in the DX catalogue while publishing data.
    These apis are intended to be used by IUDX *Providers*.

paths:
  /ngsi-ld/v1/ingestion:
    post:
      tags:
        - Data Ingestion 
      operationId: Register data ingestion stream
      parameters:
        - name: token
          in: header
          required: true
          description: >-
            A <b> valid IUDX Auth token </b> to process the request for the <b>
            protected API </b> . <br/> This field is <b> mandatory </b> for
            accessing a <b> protected API </b> .  <br/> If not provided
            with a valid token, user will be responded with <b> 401 Unauthorized
            </b> .
          schema:
            type: string
            maxLength: 512
            pattern: ^[a-zA-Z0-9\/\@\.]*$
      requestBody:
        description: >-
          A <b> valid IUDX ID </b> of the resource is mandatory. <b>Queue</b> is
          optional
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postingestionrequest'
      responses:
        '201':
          description: Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityresponse'
        '204':
          description: Empty Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardBadRequestErrorResponse'
          description: Bad query
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardInvalidTokenErrorResponse'
          description: Unauthorized
      deprecated: false
      description: >
        The `/ingestion` end point allows an IUDX Admin to register ingestion
        stream for one or more data resources. All the queries requires a <b> valid IUDX </b> `id` of
        the resource.

  /ngsi-ld/v1/ingestion/{id}:
    delete:
      tags:
        - Data Ingestion 
      operationId: Delete data ingestion stream
      parameters:
        - name: token
          in: header
          required: true
          description: >-
            A <b> valid IUDX Auth token </b> to process the request for the <b>
            protected API </b> . <br/> This field is <b> mandatory </b> for
            accessing a <b> protected API </b> .  <br/> If not provided
            with a valid token, user will be responded with <b> 401 Unauthorized
            </b> .
          schema:
            type: string
            maxLength: 512
            pattern: ^[a-zA-Z0-9\/\@\.]*$
        - name: id
          in: path
          description: >-
            A <b> valid IUDX ID </b> of the resource.
          required: true
          schema:
            type: string
            maxLength: 512
      requestBody:
        description: >-
          A <b> valid IUDX ID </b> of the resource. Mandatory attributes and
          values as per the data descriptor in the DX Catalogue
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postingestionrequest'

      responses:
        '200':
          description: Successful Query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityresponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardBadRequestErrorResponse'
          description: Bad query
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardInvalidTokenErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardResourceNotFoundErrorResponse'
          description: Resource not found
      deprecated: false
      description: >
        The `/ingestion` end point allows an IUDX Admin to delete ingestion
        stream for one or more data resources. All the queries requires a <b> valid IUDX </b> `id` of
        the resource. These apis are intended to be used by IUDX *Administrator*.
        
  /ngsi-ld/v1/entities:
    post:
      tags:
        - Publish Resource Data
      operationId: Publish data
      parameters:
        - name: token
          in: header
          description:
            A <b> valid IUDX Auth token </b> to process the request for a <b>
            resource </b> . <br/> This field is <b> mandatory </b> for
            publishing a <b> protected resource </b> .  <br/> If not provided
            with a valid token, user will be responded with <b> 401 Unauthorized
            </b>.
          required: true
          schema:
            type: string
            maxLength: 512
            pattern: ^[a-zA-Z0-9\/\@\.]*$
      requestBody:
        description: >-
          A <b> valid IUDX ID </b> of the resource is always required in the body of the message. Mandatory attributes and
          values as per the data descriptor in the DX Catalogue. 
          A Sample is shown below for some resource according to their data descriptor defined in DX catalogue server.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postentityrequest'
      responses:
        '201':
          description: Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityresponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardBadRequestErrorResponse'
          description: Bad query
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardInvalidTokenErrorResponse'
          description: Unauthorized
      deprecated: false
    description: >
      A Post Entity API is used by <b>IUDX Data *Providers* and *Delegate*</b> to publish data into the DX platform. <br/> As the POST method of the <b>/entities</b> endpoint is a protected endpoint a<b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.<br/> The request body for this API shall contain the data to be published in JSON format as per the data-descriptor available in <b>IUDX catalogue server


components:
  schemas:
    postentityrequest:
      title: postentityrequest
      required:
        - currentLevel
        - referenceLevel
        - measuredDistance
        - id
        - observationDateTime
        - deviceInfo
      type: object
      properties:
        currentLevel:
          type: number
          maxLength: 50
        referenceLevel:
          type: number
          maxLength: 50
        id:
          type: string
          maxLength: 512
        measuredDistance:
          type: number
          maxLength: 50
        observationDateTime:
          type: string
          maxLength: 50
        deviceInfo:
          type: array
          items :
            type: string
            maxLength : 50

          maxLength: 50
      example:
        currentLevel: 1.16
        referenceLevel: 15.9
        measuredDistance: 14.74
        id: >-
          suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta
        observationDateTime: '2021-09-23T11:56:24+05:30'
        deivceInfo:
          deviceId: FWR055
    postingestionrequest:
      title: postingestionrequest
      required:
        - id
        - queue
      type: object
      properties:
        id:
          type: string
          maxLength: 512
        queue:
          type: string
          maxLength: 50
      example:
        id: 'iisc.ac.in/89a36273d77dac4cf38114fca1bbe64392547f86/rs.iudx.io/pune-env-flood/FWR055'
        queue: 'ingestion/testing'
    entityresponse:
      title: entityresponse
      type: object
      properties:
        type:
          type: integer
        title:
          type: string
        results:
          type: object
          properties:
            id:
              type: string
            observationDateTime:
              type: string
            trip_id:
              type: string
            route_id:
              type: string
      example:
        type: urn:dx:rs:success
        title: success
        detail: success
    standardBadRequestErrorResponse:
      title: standardBadRequestErrorResponse
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: urn:dx:rs:badRequest
        title: Bad request
        detail: Bad query
    standardInvalidTokenErrorResponse:
      title: standardInvalidTokenErrorResponse
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: urn:dx:rs:invalidAuthorizationToken
        title: Unauthorized
        detail: Unauthorized
    standardResourceNotFoundErrorResponse:
      title: standardResourceNotFoundErrorResponse
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: urn:dx:rs:resourceNotFound
        title: Resource not in Catalogue.
        detail: Resource Not Found